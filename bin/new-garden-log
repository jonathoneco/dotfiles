#!/usr/bin/env bash

set -e

# Check if filepath argument is provided
if [ $# -eq 0 ]; then
  echo "Usage: new-garden-log <filepath>"
  echo "Example: new-garden-log \"1 Projects/My New Project/notes.md\""
  exit 1
fi

FILEPATH="$1"

# Get the directory where the file will be created
TARGET_DIR="$GARDEN_LOG_DIR/$(dirname "$FILEPATH")"

# Extract base filename without extension and without any existing index
BASE_FILENAME=$(basename "$FILEPATH" .md)
# Remove any existing index from the filename
CLEAN_BASE_FILENAME=$(echo "$BASE_FILENAME" | sed 's/^[0-9]\+[[:space:]]*//')

# Find the largest existing index in the target directory
if [ -d "$TARGET_DIR" ]; then
  LARGEST_INDEX=$(ls "$TARGET_DIR" 2>/dev/null | grep -E '^[0-9]+' | sed 's/^\([0-9]\+\).*/\1/' | sort -n | tail -1)
else
  LARGEST_INDEX=""
fi

# If no indexed files exist, start at 1, otherwise increment
if [ -z "$LARGEST_INDEX" ]; then
  NEXT_INDEX=1
else
  NEXT_INDEX=$((LARGEST_INDEX + 1))
fi

# Build the filename with the new index
INDEXED_FILENAME="${NEXT_INDEX} ${CLEAN_BASE_FILENAME}.md"
FULL_PATH="$TARGET_DIR/$INDEXED_FILENAME"

# Generate UUID (using uuidgen if available, fallback to date-based)
if command -v uuidgen >/dev/null 2>&1; then
  UUID=$(uuidgen)
else
  UUID=$(date +%s | sha256sum | cut -c1-8)-$(date +%s | sha256sum | cut -c9-12)-4$(date +%s | sha256sum | cut -c13-15)-$(date +%s | sha256sum | cut -c16-19)-$(date +%s | sha256sum | cut -c20-31)
fi

# Get current date
CURRENT_DATE=$(date +%Y-%m-%d)

# Extract filename without extension for the title
FILENAME=$(basename "$INDEXED_FILENAME" .md)
# Strip leading numbers and spaces from filename for clean title
CLEAN_FILENAME=$(echo "$FILENAME" | sed 's/^[0-9]\+[[:space:]]*//')

# Build semantic_id from directory path + filename
DIRNAME_RELATIVE=$(dirname "$FILEPATH")
if [ "$DIRNAME_RELATIVE" = "." ]; then
  # No subdirectory, just use filename
  SEMANTIC_ID=$(echo "$CLEAN_FILENAME" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | sed 's/--*/-/g' | sed 's/^-\|-$//g')
else
  # Build path.filename format - strip numbers from each directory component
  DIR_PART=$(echo "$DIRNAME_RELATIVE" | sed 's|/[0-9]\+[[:space:]]*|/|g' | sed 's|^[0-9]\+[[:space:]]*||' | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9\/]/-/g' | sed 's/--*/-/g' | sed 's/^-\|-$//g' | tr '/' '.')
  FILENAME_PART=$(echo "$CLEAN_FILENAME" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | sed 's/--*/-/g' | sed 's/^-\|-$//g')
  SEMANTIC_ID="$DIR_PART.$FILENAME_PART"
fi

# Create directory if it doesn't exist
mkdir -p "$TARGET_DIR"

# Write the template to the file
cat > "$FULL_PATH" << EOF
---
id: $UUID
semantic_id: $SEMANTIC_ID
aliases:
  - $CLEAN_FILENAME
  - $SEMANTIC_ID
tags: []
created: $CURRENT_DATE
---

# $CLEAN_FILENAME

EOF

echo "Created new garden log: $FULL_PATH"
